--altpll CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" clk0_divide_by=1 clk0_duty_cycle=50 clk0_multiply_by=1 clk0_phase_shift="0" clk1_divide_by=1 clk1_duty_cycle=50 clk1_multiply_by=1 clk1_phase_shift="-3000" clk2_divide_by=2 clk2_duty_cycle=50 clk2_multiply_by=1 clk2_phase_shift="20000" compensate_clock="CLK0" device_family="Cyclone II" inclk0_input_frequency=20000 intended_device_family="Cyclone IV" operation_mode="normal" pll_type="FAST" port_clk0="PORT_USED" port_clk1="PORT_USED" port_clk2="PORT_USED" port_clk3="PORT_UNUSED" port_clk4="PORT_UNUSED" port_clk5="PORT_UNUSED" port_extclk0="PORT_UNUSED" port_extclk1="PORT_UNUSED" port_extclk2="PORT_UNUSED" port_extclk3="PORT_UNUSED" port_inclk1="PORT_UNUSED" port_scandata="PORT_UNUSED" port_scandataout="PORT_UNUSED" clk inclk locked CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 12.1SP1 cbx_altclkbuf 2013:01:31:18:04:54:SJ cbx_altiobuf_bidir 2013:01:31:18:04:55:SJ cbx_altiobuf_in 2013:01:31:18:04:55:SJ cbx_altiobuf_out 2013:01:31:18:04:55:SJ cbx_altpll 2013:01:31:18:04:55:SJ cbx_cycloneii 2013:01:31:18:04:55:SJ cbx_lpm_add_sub 2013:01:31:18:04:55:SJ cbx_lpm_compare 2013:01:31:18:04:55:SJ cbx_lpm_counter 2013:01:31:18:04:55:SJ cbx_lpm_decode 2013:01:31:18:04:55:SJ cbx_lpm_mux 2013:01:31:18:04:55:SJ cbx_mgl 2013:01:31:18:08:38:SJ cbx_stratix 2013:01:31:18:04:55:SJ cbx_stratixii 2013:01:31:18:04:55:SJ cbx_stratixiii 2013:01:31:18:04:55:SJ cbx_stratixv 2013:01:31:18:04:55:SJ cbx_util_mgl 2013:01:31:18:04:55:SJ  VERSION_END


-- Copyright (C) 1991-2012 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION cycloneii_pll (areset, clkswitch, ena, inclk[1..0], pfdena)
WITH ( BANDWIDTH, BANDWIDTH_TYPE, C0_HIGH, C0_INITIAL, C0_LOW, C0_MODE, C0_PH, C0_TEST_SOURCE, C1_HIGH, C1_INITIAL, C1_LOW, C1_MODE, C1_PH, C1_TEST_SOURCE, C1_USE_CASC_IN, C2_HIGH, C2_INITIAL, C2_LOW, C2_MODE, C2_PH, C2_TEST_SOURCE, C2_USE_CASC_IN, C3_HIGH, C3_INITIAL, C3_LOW, C3_MODE, C3_PH, C3_TEST_SOURCE, C3_USE_CASC_IN, C4_HIGH, C4_INITIAL, C4_LOW, C4_MODE, C4_PH, C4_TEST_SOURCE, C4_USE_CASC_IN, C5_HIGH, C5_INITIAL, C5_LOW, C5_MODE, C5_PH, C5_TEST_SOURCE, C5_USE_CASC_IN, CHARGE_PUMP_CURRENT, CLK0_COUNTER, CLK0_DIVIDE_BY, CLK0_DUTY_CYCLE, CLK0_MULTIPLY_BY, CLK0_OUTPUT_FREQUENCY, CLK0_PHASE_SHIFT, CLK0_PHASE_SHIFT_NUM, clk0_use_even_counter_mode, clk0_use_even_counter_value, CLK1_COUNTER, CLK1_DIVIDE_BY, CLK1_DUTY_CYCLE, CLK1_MULTIPLY_BY, CLK1_OUTPUT_FREQUENCY, CLK1_PHASE_SHIFT, CLK1_PHASE_SHIFT_NUM, clk1_use_even_counter_mode, clk1_use_even_counter_value, CLK2_COUNTER, CLK2_DIVIDE_BY, CLK2_DUTY_CYCLE, CLK2_MULTIPLY_BY, CLK2_OUTPUT_FREQUENCY, CLK2_PHASE_SHIFT, CLK2_PHASE_SHIFT_NUM, clk2_use_even_counter_mode, clk2_use_even_counter_value, CLK3_COUNTER, CLK3_DIVIDE_BY, CLK3_DUTY_CYCLE, CLK3_MULTIPLY_BY, CLK3_OUTPUT_FREQUENCY, CLK3_PHASE_SHIFT, clk3_use_even_counter_mode, clk3_use_even_counter_value, CLK4_COUNTER, CLK4_DIVIDE_BY, CLK4_DUTY_CYCLE, CLK4_MULTIPLY_BY, CLK4_OUTPUT_FREQUENCY, CLK4_PHASE_SHIFT, clk4_use_even_counter_mode, clk4_use_even_counter_value, CLK5_COUNTER, CLK5_DIVIDE_BY, CLK5_DUTY_CYCLE, CLK5_MULTIPLY_BY, CLK5_OUTPUT_FREQUENCY, CLK5_PHASE_SHIFT, clk5_use_even_counter_mode, clk5_use_even_counter_value, CLKOUT_WIDTH = 3, COMMON_RX_TX, COMPENSATE_CLOCK, DOWN_SPREAD, ENABLE_SWITCH_OVER_COUNTER, FEEDBACK_SOURCE, GATE_LOCK_COUNTER, GATE_LOCK_SIGNAL, INCLK0_INPUT_FREQUENCY, INCLK1_INPUT_FREQUENCY, INVALID_LOCK_MULTIPLIER, LOOP_FILTER_C, LOOP_FILTER_R, M, M2, M_INITIAL, M_PH, M_TEST_SOURCE, N, N2, OPERATION_MODE, PFD_MAX, PFD_MIN, PLL_COMPENSATION_DELAY, PLL_TYPE, QUALIFY_CONF_DONE, self_reset_on_gated_loss_lock, SIM_GATE_LOCK_DEVICE_BEHAVIOR, SIMULATION_TYPE, SPREAD_FREQUENCY, SS, SWITCH_OVER_COUNTER, SWITCH_OVER_ON_GATED_LOCK, SWITCH_OVER_ON_LOSSCLK, SWITCH_OVER_TYPE, TEST_FEEDBACK_COMP_DELAY_CHAIN_BITS, TEST_INPUT_COMP_DELAY_CHAIN_BITS, USE_DC_COUPLING, VALID_LOCK_MULTIPLIER, VCO_CENTER, VCO_DIVIDE_BY, VCO_MAX, VCO_MIN, VCO_MULTIPLY_BY, VCO_POST_SCALE)
RETURNS ( clk[CLKOUT_WIDTH-1..0], locked, testdownout, testupout);

--synthesis_resources = cycloneii_pll 1 
SUBDESIGN altpll_kmb2
( 
	clk[5..0]	:	output;
	inclk[1..0]	:	input;
	locked	:	output;
) 
VARIABLE 
	pll1 : cycloneii_pll
		WITH (
			CLK0_DIVIDE_BY = 1,
			CLK0_DUTY_CYCLE = 50,
			CLK0_MULTIPLY_BY = 1,
			CLK0_PHASE_SHIFT = "0",
			CLK1_DIVIDE_BY = 1,
			CLK1_DUTY_CYCLE = 50,
			CLK1_MULTIPLY_BY = 1,
			CLK1_PHASE_SHIFT = "-3000",
			CLK2_DIVIDE_BY = 2,
			CLK2_DUTY_CYCLE = 50,
			CLK2_MULTIPLY_BY = 1,
			CLK2_PHASE_SHIFT = "20000",
			COMPENSATE_CLOCK = "clk0",
			INCLK0_INPUT_FREQUENCY = 20000,
			OPERATION_MODE = "normal",
			PLL_TYPE = "auto"
		);

BEGIN 
	pll1.inclk[] = inclk[];
	clk[] = pll1.clk[];
	locked = pll1.locked;
END;
--VALID FILE
